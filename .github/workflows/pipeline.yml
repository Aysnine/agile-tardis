name: Pipeline

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
jobs:
  # test:
  #   strategy:
  #     matrix:
  #       node-version: [14]
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #   - run: yarn install
  #   - run: yarn test

  integration:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Tencent Registry
        uses: docker/login-action@v1 
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.TENCENT_USERNAME }}
          password: ${{ secrets.TENCENT_TOKEN }}
      -
        name: Get Previous tag
        id: previousTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      -
        name: Get Short Sha
        id: short-sha
        uses: benjlevesque/short-sha@v1.2
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}

      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ccr.ccs.tencentyun.com/aysnine/agile-tardis-preview:${{ steps.previousTag.outputs.tag }}_${{ steps.short-sha.outputs.sha }}
            ccr.ccs.tencentyun.com/aysnine/agile-tardis-preview:latest
      - run: |
          TAG=${{ steps.previousTag.outputs.tag }}_${{ steps.short-sha.outputs.sha }}
          echo $TAG
          sed -i -e "s/\:latest/\:${TAG}/g" ./deploy/d2-cloud.yaml
          cat ./deploy/d2-cloud.yaml
      - uses: actions-hub/kubectl@v1.21.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./deploy/d2-cloud.yaml
